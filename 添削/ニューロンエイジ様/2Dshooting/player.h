//##################################################################################################################################################################//
//
// プレイヤーヘッダファイル [player.h]
// Author : SUZUKI FUUTA
//
//##################################################################################################################################################################//
#ifndef _PLAYER_H_
#define _PLAYER_H_

#include "main.h"

//=====================================================================================================================================================================//
// プレイヤーの種類
//=====================================================================================================================================================================//
typedef enum
{
	PLAYER_TYPE_GREEN = 0,	// 緑
	PLAYER_TYPE_RED,		// 赤
	PLAYER_TYPE_MAX		
}PLAYER_TYPE;

//=====================================================================================================================================================================//
// プレイヤーの状態
//=====================================================================================================================================================================//
typedef enum
{
	PLAYERSTATE_APPEAR = 0,	// 出現
	PLAYERSTATE_NORMAL,		// 通常
	PLAYERSTATE_DAMAGE,		// ダメージ
	PLAYERSTATE_WAIT,		// 出現待ち
	PLAYERSTATE_DEATH,		// 死亡
	PLAYERSTATE_DENGER,		// 危険エリア
	PLAYERSTATE_MAX
}PLAYERSTATE;				// 名前；列挙型

//=====================================================================================================================================================================//
// プレイヤーの現在の状態
//=====================================================================================================================================================================//
typedef struct
{
	int nCounterState;			// 状態カウンター
	int nCounterDisp;			// 出現カウンター
	int nLife;					// 体力
	bool bSkills;				// スキル
	D3DXVECTOR3 Playerpos;		// 位置
	PLAYERSTATE PlayerState;	// プレイヤーの状態
	PLAYER_TYPE player;			// プレイヤーのタイプ
	MODE g_mode;
}PLAYER;						//名前；構造体

//=====================================================================================================================================================================//
// プロトタイプ宣言
//=====================================================================================================================================================================//
HRESULT InitPlayer(MODE mode);
void UninitPlayer(void);
void UpdatePlayer(void);
void DrawPlayer(void);
PLAYER *GetPlayer(void);
bool HitPlayer(int Damage);

#endif