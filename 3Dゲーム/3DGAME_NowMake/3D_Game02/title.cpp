//##################################################################################################################################################################//
//
// プレイヤー処理 [player.cpp]
// Author : SUZUKI FUUTA
//
//##################################################################################################################################################################//

//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// インクルードファイル
//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
#include "title.h"
#include "fade.h"
#include "keyinput.h"
#include "Dinput.h"
#include "sound.h"
#include "meshfield.h"
#include "meshwall.h"
#include "camera.h"
#include "light.h"

//=====================================================================================================================================================================//
// タイトルの初期化処理
//=====================================================================================================================================================================//
HRESULT InitTitle(void)
{

	////PlaySound(SOUND_LABEL_BGM000);
	InitTitleModel();
	InitCamera();
	Initlight();
	InitMeshfield();
	InitMeshWall();
	InitTitleUi();
	// 壁の配置
	SetMeshWall(D3DXVECTOR3(0.0f, 0.0f, WALL_POS), D3DXVECTOR3(0.0f, 0.0f, 0.0f), WALL_WIGTH, WALL_HEIGHHT);
	SetMeshWall(D3DXVECTOR3(0.0f, 0.0f, -WALL_POS), D3DXVECTOR3(0.0f, D3DX_PI, 0.0f), WALL_WIGTH, WALL_HEIGHHT);
	SetMeshWall(D3DXVECTOR3(WALL_POS, 0.0f, 0.0f), D3DXVECTOR3(0.0f, PI_HAFE, 0.0f), WALL_WIGTH, WALL_HEIGHHT);
	SetMeshWall(D3DXVECTOR3(-WALL_POS, 0.0f, 0.0f), D3DXVECTOR3(0.0f, -PI_HAFE, 0.0f), WALL_WIGTH, WALL_HEIGHHT);

	return S_OK;
}


//=====================================================================================================================================================================//
// 終了処理
//=====================================================================================================================================================================//
void UninitTitle(void)
{
	//StopSound(SOUND_LABEL_BGM000);	//BGM

	UninitTitleModel();
	UninitCamera();
	Uninitlight();
	UninitMeshfield();
	UninitMeshWall();
	UninitTitleUi();
}


//=====================================================================================================================================================================//
// 更新処理
//=====================================================================================================================================================================//
void UpdateTitle(void)
{
	// フェードの情報
	FADE pFade;
	pFade = GetFade();

	//タイトルロゴが完成している場合
	if (pFade == FADE_NONE)
	{
		if (GetKeyboardTrigger(DIK_RETURN) == true || GetKeypadTrigger(3) == true)
		{
			SetFade(FADE_OUT, MODE_TUTORIAL);	//フェードアウト・ゲームモードに移行
		}
	}
	UpdateTitleModel();
	UpdateCamera();
	Updatelight();
	UpdateMeshfield();
	UpdateMeshWall();
	UpdateTitleUi();

}


//=====================================================================================================================================================================//
// 描画処理
//=====================================================================================================================================================================//
void DrawTitle(void)
{
	SetCamera();
	DrawMeshfield();
	DrawMeshWall();
	DrawTitleModel();
	DrawTitleUi();

}




