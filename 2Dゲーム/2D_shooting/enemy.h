//##################################################################################################################################################################//
//
// エネミーヘッダファイル [enemy.h]
// Author : SUZUKI FUUTA
//
//##################################################################################################################################################################//
#ifndef _ENEMY_H_
#define _ENEMY_H_

#include "main.h"

//=====================================================================================================================================================================//
// マクロ変数
//=====================================================================================================================================================================//
#define ENEMY_SIZE		(30)	// エネミーのサイズ

//=====================================================================================================================================================================//
// 敵の種類
//=====================================================================================================================================================================//
typedef enum
{
	ENEMY_TYPE_GUS = 0,	// ざこ
	ENEMY_TYPE_FIRE,	// 赤専用
	ENEMY_TYPE_TANK,	// 緑専用
	ENEMY_TYPE_FLAWAR,	// 水源エリア専用
	ENEMY_TYPE_MAX
}ENEMY_TYPE;

//=====================================================================================================================================================================//
// 敵の状態
//=====================================================================================================================================================================//
typedef enum
{
	ENEMYSTATE_NORMAL = 0,	// 通常
	ENEMYSTATE_DAMAGE,		// ダメージ
	ENEMYSTATE_FALSE,		// 死亡
	ENEMYSTATE_STAY,		// 出現まち
	ENEMYSTATE_GO,			// 出現
	ENEMYSTATE_MAX
}ENEMYSTATE;

//=====================================================================================================================================================================//
// 黒い敵の種類
//=====================================================================================================================================================================//
typedef enum
{
	ENEMY_GUS_FLAWAR = 0,	// 花専用
	ENEMY_GUS_FIRE,			// 火専用
	ENEMY_GUS_TANK,			// 戦車専用
	ENEMY_GUS_NORMAL,		// ノーマル
	ENEMY_GUS_MAX
}ENEMY_GUS_TYPE;

//=====================================================================================================================================================================//
// 敵の構造体
//=====================================================================================================================================================================//
typedef struct
{
	D3DXVECTOR3 pos;		// 位置
	D3DXVECTOR3 move;		// 位置
	ENEMY_TYPE Type;		// 種類
	ENEMYSTATE state;		// 状態
	int nCountBullet;		// 敵のバレットカウンター
	int nCounterState;		// 状態のカウンター
	int nLife;				// 体力
	bool EneSkill;			// スキルが使用されているかいないか
	bool bUse;				// 生存確認
}ENEMY;

//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 黒い敵
//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
typedef struct
{
	int RandApper;			// 出現カウンター
	int StandardPos;		// 基準位置
	int AddPosRand;			// 基準からプラスされる位置
	int ObjctNunber;		// オブジェクトのナンバー
	int GusType;			// 黒い敵のタイプ
	D3DXCOLOR GusCol;		// 黒い敵の色
}ENEMY_GUS;

//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 火の敵
//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
typedef struct
{
	int RandApper;			// 出現カウンター
	int StandardPos;		// 基準位置
	int AddPosRand;			// 基準からプラスされる位置
}ENEMY_FIRE;

//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 戦車の敵
//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
typedef struct
{
	int RandApper;			// 出現カウンター
	int StandardPos;		// 基準位置
	int AddPosRand;			// 基準からプラスされる位置

}ENEMY_TANK;

//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
// 花の敵
//------------------------------------------------------------------------------------------------------------------------------------------------------------------//
typedef struct
{
	bool LifeDeath;			// 生存確認
	int RandApper;			// 出現カウンター
	int BulletTime;			// 発射のタイミング
	ENEMY_TYPE FlawarNumber;// 花のナンバー
	D3DXVECTOR3 FlawarPos;	// 花の位置
}ENEMY_FLAWAR;

//=====================================================================================================================================================================//
// プロトタイプ宣言
//=====================================================================================================================================================================//
HRESULT InitEnemy(void);
void UninitEnemy(void);
void UpdateEnemy(void);
void DrawEnemy(void);
void SetEnemy(D3DXVECTOR3 pos, D3DXVECTOR3 move, ENEMY_TYPE Type, int nLife);
void RandSetEnemy(int nIdx);
void SetEnemyGus(int nIdx);
void StateEnemy(int nIdx);
void EnemyGus(int nIdx);
void EnemyFire(int nIdx);
void EnemyTank(int nIdx);
void EnemyFlawar(int nIdx);
bool HitEnemy(int nIdx, int nDamage);
ENEMY *GetEnemy(void);
ENEMY_FLAWAR *GetFlawar(void);

#endif 

